{"version":3,"sources":["Components/habit.jsx","Components/habits.jsx","Components/navbar.jsx","Components/form.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","handleOrder","direction","onOrder","this","name","count","className","onClick","PureComponent","Habits","handleClear","onClear","handleReset","onReset","map","id","Fragment","Component","Navbar","InputForm","state","input","handleInput","onAdd","document","getElementById","value","setState","handleChange","e","target","trim","TextField","sx","width","maxWidth","label","onChange","onKeyPress","key","variant","Button","marginLeft","height","fontSize","fontFamily","length","alert","App","habits","item","filter","handleAdd","newItem","String","btn","above","find","a","swapOrder","below","b","temp_a","temp_b","temp","arr","undefined","push","sort","x","y","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f8d1511a.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n  \r\n\r\n  handleIncrement = ()=>{\r\n    this.props.onIncrement(this.props.habit);\r\n  };\r\n \r\n  handleDecrement = ()=>{\r\n    this.props.onDecrement(this.props.habit);\r\n  };\r\n\r\n  handleDelete = ()=>{\r\n    this.props.onDelete(this.props.habit);\r\n  };\r\n  handleOrder = (direction)=>{\r\n    this.props.onOrder(this.props.habit, direction);\r\n  };\r\n  \r\n  render() {\r\n    const {name, count} = this.props.habit;\r\n    return (\r\n      <li className=\"habit\">\r\n        <span className=\"habit-name\">{name}</span>\r\n        <span className=\"habit-count\">{count}</span>\r\n        <div className=\"habit-buttons\">\r\n          <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n          <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n            <i className=\"fas fa-minus\"></i>\r\n          </button>\r\n          <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n            <i className=\"far fa-trash-alt\"></i>\r\n          </button>\r\n          <button className=\"habit-button habit-up\" onClick={()=>{const dir = 'up'; this.handleOrder(dir);}}>\r\n            <i className=\"fas fa-chevron-up\"></i>\r\n          </button>\r\n          <button className=\"habit-button habit-down\" onClick={()=>{const dir = 'down'; this.handleOrder(dir)}}>\r\n            <i className=\"fas fa-chevron-down\"></i>\r\n          </button>\r\n        </div>\r\n      </li> \r\n    );\r\n  }\r\n}\r\n\r\nexport default Habit;","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\n\r\n\r\nclass Habits extends Component {\r\n  handleIncrement = (habit)=>{\r\n    this.props.onIncrement(habit);\r\n  };\r\n\r\n  handleDecrement = (habit)=>{\r\n    this.props.onDecrement(habit);\r\n  };\r\n\r\n  handleDelete = (habit)=>{\r\n    this.props.onDelete(habit);\r\n  };\r\n\r\n  handleClear = ()=>{\r\n    this.props.onClear();\r\n  };\r\n  handleOrder = (habit, direction)=>{\r\n    this.props.onOrder(habit, direction);\r\n  };\r\n  handleReset = ()=>{\r\n    this.props.onReset();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <section className=\"habit-list\">\r\n      <ul>\r\n        {\r\n          this.props.habit.map(habit =>\r\n            <Habit key={habit.id} habit={habit} onIncrement={this.handleIncrement}\r\n            onDecrement={this.handleDecrement} onDelete={this.handleDelete}\r\n            onOrder={this.handleOrder}\r\n            />\r\n          )\r\n        }\r\n      </ul>\r\n      {this.props.count > 0 ? \r\n      <React.Fragment>\r\n        <button className=\"clear-button\" onClick={this.handleClear}>Clear&nbsp;\r\n          <i className=\"fas fa-pump-soap\"></i>\r\n        </button> \r\n        <button className=\"reset-button\" onClick={this.handleReset}>Reset&nbsp;\r\n          <i className=\"fas fa-redo-alt\"></i>\r\n        </button>\r\n      </React.Fragment> : null}\r\n      \r\n    </section>);\r\n  }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-logo\">\r\n          <i className=\"navbar-logo fas fa-leaf\"/>\r\n          <span>Habit Tracker</span>\r\n        </div>\r\n        \r\n        <div className=\"navbar-count\">\r\n          <span>{this.props.count}</span>\r\n        </div>\r\n\r\n        <ul className=\"navbar-links\">\r\n          <li>\r\n            <i className=\"fab fa-twitter\"></i>\r\n          </li>\r\n          <li>\r\n            <i className=\"fab fa-instagram\"></i>\r\n          </li>\r\n        </ul>\r\n        \r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;","import React, { PureComponent } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport { Button } from '@mui/material';\r\n\r\n\r\nclass InputForm extends PureComponent {\r\n  state = {\r\n    input:\"\",\r\n  };\r\n  \r\n  handleInput = (input)=>{  //input을 리스트에 추가하고 텍스트필드 초기화\r\n    if(input!==\"\"){\r\n      this.props.onAdd(input);\r\n      document.getElementById('filled-basic').value=\"\";\r\n      this.setState({input:\"\"});\r\n    }\r\n  };\r\n  handleChange = (e)=>{ //input state 변경\r\n    if(e.target.value.trim() !== \"\"){\r\n      this.setState({input:e.target.value.trim()});\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"input-form\">\r\n        <TextField\r\n          sx={{\r\n            width:500,\r\n            maxWidth:'100%',\r\n          }}\r\n          label=\"Add a new Habit\" \r\n          id=\"filled-basic\"\r\n          onChange={this.handleChange}\r\n          onKeyPress={(e)=>{\r\n            if(e.key===\"Enter\"){\r\n              this.handleInput(this.state.input);\r\n            }\r\n          }}\r\n          variant=\"filled\"/>\r\n        <Button \r\n          sx={{\r\n            marginLeft:3, \r\n            height:63, \r\n            width:100, \r\n            fontSize:20, \r\n            fontFamily: 'Zen Kurenaido'\r\n          }} \r\n          className=\"submit-btn\" \r\n          variant=\"contained\"\r\n          onClick={()=>{\r\n            if(this.state.input.length === 0) alert('내용을 입력하세요');\r\n            else{\r\n              this.handleInput(this.state.input);\r\n            }\r\n          }}>\r\n            Add\r\n          </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputForm;","import './app.css';\r\nimport Habits from './Components/habits';\r\nimport React, { Component } from 'react';\r\nimport Navbar from './Components/navbar';\r\nimport InputForm from './Components/form';\r\n\r\n\r\nclass App extends Component {\r\n  state = {    \r\n    habits: [{id : 1, name: 'Reading', count:0},\r\n            {id : 2, name: 'Running', count:0},\r\n            {id : 3, name: 'Coding', count:0},\r\n            ],\r\n    \r\n  };\r\n  handleIncrement = (habit)=>{\r\n    const habits = this.state.habits.map((item)=>{\r\n      if(item.id===habit.id){\r\n        return {...habit, count:habit.count+1};\r\n      }\r\n      else{\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({habits});\r\n     \r\n  };\r\n\r\n  handleDecrement = (habit)=>{\r\n    const habits = this.state.habits.map((item)=>{\r\n      if(item.id===habit.id){\r\n        const count = habit.count - 1;\r\n        return {...habit, count: count < 0 ? 0 : count};\r\n      }\r\n      else{\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({habits});\r\n     \r\n  };\r\n\r\n  handleDelete = (habit)=>{\r\n    const habits = this.state.habits.filter(item=>\r\n      item.id !== habit.id\r\n    );\r\n    this.setState({habits});\r\n  };\r\n  \r\n  handleClear = ()=>{\r\n    this.setState({habits: []});\r\n  };\r\n  handleAdd = (input) =>{\r\n    const newItem = {\r\n      id: this.state.habits.length + 1,\r\n      name: String(input),\r\n      count: 0,\r\n    }\r\n    const habits = [...this.state.habits, newItem];\r\n    this.setState({habits});\r\n  };\r\n  handleOrder = (item, btn)=>{\r\n    if(btn==='up'){\r\n      if(item.id!==1){\r\n        const above = this.state.habits.find(a=>a.id === item.id-1);\r\n        this.swapOrder(item, above);\r\n      }\r\n    }else if(btn==='down'){\r\n      if(item.id!==this.state.habits.length){\r\n        const below = this.state.habits.find(a=>a.id === item.id + 1);\r\n        this.swapOrder(item, below);\r\n      }\r\n    }\r\n  };\r\n  swapOrder = (a, b)=>{\r\n    let temp_a = {...a};\r\n    let temp_b = {...b};\r\n    const temp = temp_a.id;\r\n    temp_a.id = temp_b.id;\r\n    temp_b.id = temp;\r\n    \r\n    let arr = [...this.state.habits];\r\n    if(b===undefined) return;\r\n    arr = arr.filter((item)=> (item.id!==a.id && item.id!==b.id));\r\n    arr.push(temp_a,temp_b);\r\n    \r\n    arr.sort((x,y)=>x.id-y.id);\r\n    this.setState({habits:arr});\r\n  };\r\n  handleReset = ()=>{\r\n    const habits = this.state.habits.map(item=>{\r\n      if(item.count!==0) {\r\n        return {...item, count:0};\r\n      }\r\n      return item;\r\n    });\r\n    this.setState({habits});\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar count={this.state.habits.filter(item=>item.count>0).length}/>\r\n        <InputForm habit={this.state.habits} onAdd={this.handleAdd}/>\r\n        <Habits key={this.state.habits.id} habit={this.state.habits} onIncrement={this.handleIncrement}\r\n            onDecrement={this.handleDecrement} onDelete={this.handleDelete}\r\n            onClear={this.handleClear} count={this.state.habits.length}\r\n            onOrder={this.handleOrder}\r\n            onReset={this.handleReset}/>     \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport '@fortawesome/fontawesome-free/js/all.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}